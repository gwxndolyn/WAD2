rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read any user profile (for chat, profiles, etc.) but only write their own
    match /users/{userId} {
      allow read: if request.auth != null;  // Any authenticated user can read profiles
      allow write: if request.auth != null && request.auth.uid == userId;  // Can only write own profile
    }

    // Listings can be read by anyone, but only written by authenticated users
    match /listings/{document} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Rental requests can be read and written by authenticated users
    match /rentalRequests/{document} {
      allow read, write: if request.auth != null;
    }

    // Reviews can be read by anyone, but only written by authenticated users
    match /reviews/{document} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Favorites can only be accessed by the user who created them
    match /favorites/{document} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Chats can only be accessed by participants
    match /chats/{chatId} {
      // User can read if they are a participant
      allow read: if request.auth != null && 
                    request.auth.uid in resource.data.participants;
      
      // User can create a chat if they are one of the participants
      allow create: if request.auth != null && 
                      request.auth.uid in request.resource.data.participants;
      
      // User can update if they are a participant
      allow update: if request.auth != null && 
                      request.auth.uid in resource.data.participants;
      
      // Messages subcollection
      match /messages/{messageId} {
        // User can read messages if they are a participant in the parent chat
        allow read: if request.auth != null && 
                      request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
        
        // User can write messages if they are a participant and the senderId matches their uid
        allow create: if request.auth != null && 
                        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants &&
                        request.auth.uid == request.resource.data.senderId;
        
        // User can update their own messages or mark messages as read
        allow update: if request.auth != null && 
                        request.auth.uid in get(/databases/$(database)/documents/chats/$(chatId)).data.participants;
      }
    }
  }
}